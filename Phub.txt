-- Original script with modifications for Map Deleter and scrollable sidebar

local function enableTracers()
    print("Enabling Tracers...")
    _G.tracersEnabled = true
    if not loadedScriptTracers then
        loadedScriptTracers = loadstring(game:HttpGet("https://pastebin.com/raw/nXSwL3WD", true))
        loadedScriptTracers()
    end
end

local function disableTracers()
    print("Disabling Tracers...")
    _G.tracersEnabled = false
    loadedScriptTracers = nil
end

-- Global variable for Tracers script
local loadedScriptTracers = nil

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- 1) New Loadstring URLs for other scripts
local script1URL = "https://raw.githubusercontent.com/policeCOKE1-alt/4/refs/heads/main/BallPredictorscript%20-%20Copy.txt"
local script2URL = "https://raw.githubusercontent.com/policeCOKE1-alt/5/refs/heads/main/InfStamScript%20-%20Copy.txt"
local script3URL = "https://raw.githubusercontent.com/policeCOKE1-alt/6/refs/heads/main/BallPredicotorScript2%20-%20Copy.txt"

-- 2) Functions to load/unload scripts for other functionalities
local loadedScript1, loadedScript2, loadedScript3 = nil, nil, nil

local function enableScript1()
    print("Enabling Ball Predictor 1...")
    _G.script1Enabled = true
    if not loadedScript1 then
        loadedScript1 = loadstring(game:HttpGet(script1URL, true))
        loadedScript1()
    end
end

local function disableScript1()
    print("Disabling Ball Predictor 1...")
    _G.script1Enabled = false
    loadedScript1 = nil
end

local function enableScript2()
    print("Enabling Inf stam...")
    _G.script2Enabled = true
    if not loadedScript2 then
        loadedScript2 = loadstring(game:HttpGet(script2URL, true))
        loadedScript2()
    end
end

local function disableScript2()
    print("Disabling Inf stam...")
    _G.script2Enabled = false
    loadedScript2 = nil
end

local function enableScript3()
    print("Enabling Ball Predictor 2...")
    _G.script3Enabled = true
    if not loadedScript3 then
        loadedScript3 = loadstring(game:HttpGet(script3URL, true))
        loadedScript3()
    end
end

local function disableScript3()
    print("Disabling Ball Predictor 2...")
    _G.script3Enabled = false
    loadedScript3 = nil
end

-- Map Deleter functions
local function enableMapDeleter()
    print("Enabling Map Deleter...")
    _G.mapDeleterEnabled = true
    loadstring(game:HttpGet("https://raw.githubusercontent.com/policeCOKE1-alt/7/refs/heads/main/MapDeleter.txt", true))()
end

local function disableMapDeleter()
    print("Disabling Map Deleter...")
    _G.mapDeleterEnabled = false
    _G.MapOff()  -- Map restoration command
end

-- 3) Build the GUI
-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MySploitGui"
screenGui.Parent = playerGui

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 250)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -125)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.BackgroundTransparency = 0.3
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local originalSize = mainFrame.Size -- store original size for restore

-- Top Bar (draggable)
local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1, 0, 0, 30)
topBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
topBar.BackgroundTransparency = 0.3
topBar.BorderSizePixel = 0
topBar.Parent = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -40, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Made by PoliceCOKE1"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextScaled = false
titleLabel.TextSize = 12
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = topBar

local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 40, 1, 0)
minimizeButton.Position = UDim2.new(1, -40, 0, 0)
minimizeButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
minimizeButton.BackgroundTransparency = 0.3
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.TextScaled = false
minimizeButton.TextSize = 12
minimizeButton.Parent = topBar

-- Sidebar (for script buttons) as a scrolling frame
local sidebar = Instance.new("ScrollingFrame")
sidebar.Name = "Sidebar"
sidebar.Size = UDim2.new(0, 140, 1, -30)
sidebar.Position = UDim2.new(0, 0, 0, 30)
sidebar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
sidebar.BackgroundTransparency = 0.3
sidebar.BorderSizePixel = 0
sidebar.CanvasSize = UDim2.new(0, 0, 0, 55 * 5) -- Adjust height based on number of buttons (here 5 scripts)
sidebar.ScrollBarThickness = 5
sidebar.Parent = mainFrame

local uiListLayout = Instance.new("UIListLayout")
uiListLayout.Parent = sidebar
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
uiListLayout.Padding = UDim.new(0, 5)

-- Right Content Area (for On/Off buttons)
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1, -140, 1, -30)
contentFrame.Position = UDim2.new(0, 140, 0, 30)
contentFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
contentFrame.BackgroundTransparency = 0.3
contentFrame.BorderSizePixel = 0
contentFrame.Parent = mainFrame

-- Self-Destruct Button (bottom right corner)
local destructBtn = Instance.new("TextButton")
destructBtn.Size = UDim2.new(0, 80, 0, 30)
destructBtn.Position = UDim2.new(1, -90, 1, -40)
destructBtn.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
destructBtn.Text = "Self-Destruct"
destructBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
destructBtn.Font = Enum.Font.SourceSansBold
destructBtn.TextScaled = false
destructBtn.TextSize = 12
destructBtn.Parent = mainFrame

-- Visibility update function
local function updateVisibility(isMinimized)
    if isMinimized then
        sidebar.Visible = false
        contentFrame.Visible = false
        destructBtn.Visible = false
        titleLabel.Visible = false
    else
        sidebar.Visible = true
        contentFrame.Visible = true
        destructBtn.Visible = true
        titleLabel.Visible = true
    end
end

local minimized = false
updateVisibility(minimized)

minimizeButton.MouseButton1Click:Connect(function()
    if not minimized then
        minimized = true
        mainFrame.Size = UDim2.new(0, 40, 0, 40)
        minimizeButton.Text = "+"
        updateVisibility(minimized)
    else
        minimized = false
        mainFrame.Size = originalSize
        minimizeButton.Text = "-"
        updateVisibility(minimized)
    end
end)

-- Dragging functionality
local dragging = false
local dragInput, dragStart, startPos
topBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
topBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- 4) Scripts Sidebar and Content
local function clearContent()
    for _, child in pairs(contentFrame:GetChildren()) do
        if child:IsA("GuiObject") then
            child:Destroy()
        end
    end
end

-- Scripts table with the new Map Deleter entry added
local scripts = {
    {
        Name = "Ball Predictor 1",
        Enabled = false,
        EnableFunc = enableScript1,
        DisableFunc = disableScript1
    },
    {
        Name = "Inf stam",
        Enabled = false,
        EnableFunc = enableScript2,
        DisableFunc = disableScript2
    },
    {
        Name = "Ball Predictor 2",
        Enabled = false,
        EnableFunc = enableScript3,
        DisableFunc = disableScript3
    },
    {
        Name = "Tracers",
        Enabled = false,
        EnableFunc = enableTracers,
        DisableFunc = disableTracers
    },
    {
        Name = "Map Deleter",
        Enabled = false,
        EnableFunc = enableMapDeleter,
        DisableFunc = disableMapDeleter,
        Warning = "Only turn this on when on a court"
    }
}

-- Create a button for each script and parent to the scrollable sidebar
for i, scriptData in ipairs(scripts) do
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -10, 0, 50)
    btn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    btn.BackgroundTransparency = 0.3
    btn.BorderSizePixel = 0
    btn.Text = scriptData.Name
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextScaled = false
    btn.TextSize = 14
    btn.TextWrapped = true
    btn.Parent = sidebar

    btn.MouseButton1Click:Connect(function()
        clearContent()

        -- Title label for the selected script
        local lbl = Instance.new("TextLabel")
        lbl.Size = UDim2.new(1, 0, 0, 40)
        lbl.BackgroundTransparency = 1
        lbl.Text = scriptData.Name
        lbl.TextColor3 = Color3.fromRGB(255, 255, 255)
        lbl.Font = Enum.Font.SourceSansBold
        lbl.TextScaled = false
        lbl.TextSize = 14
        lbl.TextWrapped = true
        lbl.Parent = contentFrame

        local currentOffset = 40

        -- If there's a warning message, place it directly below the title
        if scriptData.Warning then
            local warnLbl = Instance.new("TextLabel")
            warnLbl.Size = UDim2.new(1, 0, 0, 20)
            warnLbl.Position = UDim2.new(0, 0, 0, currentOffset)
            warnLbl.BackgroundTransparency = 1
            warnLbl.Text = scriptData.Warning
            warnLbl.TextColor3 = Color3.fromRGB(255, 255, 0)  -- Yellow color
            warnLbl.Font = Enum.Font.SourceSansBold
            warnLbl.TextScaled = false
            warnLbl.TextSize = 12
            warnLbl.TextWrapped = true
            warnLbl.Parent = contentFrame
            currentOffset = currentOffset + 30  -- Adjust offset for buttons
        else
            currentOffset = currentOffset + 10
        end

        -- On button
        local onBtn = Instance.new("TextButton")
        onBtn.Size = UDim2.new(0, 80, 0, 40)
        onBtn.Position = UDim2.new(0, 10, 0, currentOffset)
        onBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 0)
        onBtn.Text = "On"
        onBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        onBtn.Font = Enum.Font.SourceSansBold
        onBtn.TextScaled = false
        onBtn.TextSize = 14
        onBtn.Parent = contentFrame

        -- Off button
        local offBtn = Instance.new("TextButton")
        offBtn.Size = UDim2.new(0, 80, 0, 40)
        offBtn.Position = UDim2.new(0, 100, 0, currentOffset)
        offBtn.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
        offBtn.Text = "Off"
        offBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        offBtn.Font = Enum.Font.SourceSansBold
        offBtn.TextScaled = false
        offBtn.TextSize = 14
        offBtn.Parent = contentFrame

        onBtn.MouseButton1Click:Connect(function()
            if not scriptData.Enabled then
                scriptData.EnableFunc()
                scriptData.Enabled = true
                print(scriptData.Name .. " is now Enabled")
            end
        end)
        offBtn.MouseButton1Click:Connect(function()
            if scriptData.Enabled then
                scriptData.DisableFunc()
                scriptData.Enabled = false
                print(scriptData.Name .. " is now Disabled")
            end
        end)
    end)
end

-- Fire the first button if one exists to initialize content
if sidebar:FindFirstChildWhichIsA("TextButton") then
    sidebar:FindFirstChildWhichIsA("TextButton").MouseButton1Click:Fire()
end

-- 5) Self-Destruct Button
destructBtn.MouseButton1Click:Connect(function()
    print("Self-Destruct Initiated...")
    _G.script1Enabled = false
    _G.script2Enabled = false
    _G.script3Enabled = false
    _G.tracersEnabled = false
    _G.mapDeleterEnabled = false
    loadedScript1 = nil
    loadedScript2 = nil
    loadedScript3 = nil
    loadedScriptTracers = nil
    screenGui:Destroy()
    print("GUI and scripts have been destroyed!")
end)

-- 6) Keybind: Shift + P to toggle mainFrame visibility
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.P and UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
        if minimized then
            minimized = false
            mainFrame.Size = originalSize
            minimizeButton.Text = "-"
            updateVisibility(minimized)
        else
            minimized = true
            mainFrame.Size = UDim2.new(0, 40, 0, 40)
            minimizeButton.Text = "+"
            updateVisibility(minimized)
        end
    end
end)
