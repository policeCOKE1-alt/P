----------------------------------------------------
-- CLIENTSIDE COLOR CHANGER LOGIC
----------------------------------------------------
-- Global color variables (initial defaults)
local colorChangerEnabled = false
local newCourtColor = BrickColor.new("Lime green")
local newBallColor = BrickColor.new("Bright red")
local newBounceColor = BrickColor.new("Bright yellow")
local newLandingColor = BrickColor.new("Bright orange")

-- Colors that should remain unchanged for courts
local excludedColors = {
    ["Really black"] = true,
    ["Black"] = true,
    ["Really white"] = true,
    ["White"] = true,
    ["Medium stone grey"] = true,
    ["Dark stone grey"] = true,
    ["Light stone grey"] = true,
}

local function updateCourtPartColor(part)
    if part:IsA("BasePart") then
        local currentColorName = part.BrickColor.Name
        if not excludedColors[currentColorName] then
            print("Updating court part:", part:GetFullName(), "to", newCourtColor.Name)
            part.BrickColor = newCourtColor
        else
            print("Skipping court part:", part:GetFullName(), "with excluded color:", currentColorName)
        end
    end
end

local function updateBallObject(object)
    local lowerName = object.Name:lower()
    local parentLower = (object.Parent and object.Parent.Name:lower()) or ""
    local isBounce = lowerName:find("bounce") or parentLower:find("bounce")
    local isLanding = lowerName:find("land") or parentLower:find("land")
    
    if object:IsA("BasePart") then
        if isBounce then
            print("Updating Bounce effect BasePart:", object:GetFullName(), "to", newBounceColor.Name)
            object.BrickColor = newBounceColor
        elseif isLanding then
            print("Updating Landing effect BasePart:", object:GetFullName(), "to", newLandingColor.Name)
            object.BrickColor = newLandingColor
        else
            print("Updating ball BasePart:", object:GetFullName(), "to", newBallColor.Name)
            object.BrickColor = newBallColor
        end
    elseif object:IsA("Trail") then
        if isBounce then
            object.Color = ColorSequence.new(newBounceColor.Color)
        elseif isLanding then
            object.Color = ColorSequence.new(newLandingColor.Color)
        else
            object.Color = ColorSequence.new(newBallColor.Color)
        end
    elseif object:IsA("SelectionBox") then
        if isBounce then
            object.LineColor = newBounceColor.Color
        elseif isLanding then
            object.LineColor = newLandingColor.Color
        else
            object.LineColor = newBallColor.Color
        end
    elseif object:IsA("ParticleEmitter") then
        if isBounce then
            object.Color = ColorSequence.new(newBounceColor.Color)
        elseif isLanding then
            object.Color = ColorSequence.new(newLandingColor.Color)
        else
            object.Color = ColorSequence.new(newBallColor.Color)
        end
    end
end

local function applyColorsToCourts()
    local courtsFolder = game.Workspace:FindFirstChild("Courts")
    if courtsFolder then
        for _, part in ipairs(courtsFolder:GetDescendants()) do
            updateCourtPartColor(part)
        end
    else
        warn("Courts folder not found in Workspace.")
    end
end

local function applyColorsToBalls()
    local holderFolder = game.Workspace:FindFirstChild("Holder")
    if holderFolder then
        local ballsFolder = holderFolder:FindFirstChild("Balls")
        local effectsFolder = holderFolder:FindFirstChild("Effects")
        if ballsFolder then
            for _, obj in ipairs(ballsFolder:GetDescendants()) do
                updateBallObject(obj)
            end
        else
            warn("Balls folder not found under Holder.")
        end
        if effectsFolder then
            for _, obj in ipairs(effectsFolder:GetDescendants()) do
                updateBallObject(obj)
            end
        else
            warn("Effects folder not found under Holder.")
        end
    else
        warn("Holder folder not found in Workspace.")
    end
end

local function applyColors()
    if colorChangerEnabled then
        applyColorsToCourts()
        applyColorsToBalls()
    end
end

-- Set event listeners so that new parts are updated as they spawn
local courtsFolder = game.Workspace:FindFirstChild("Courts")
if courtsFolder then
    courtsFolder.DescendantAdded:Connect(function(part)
        if colorChangerEnabled then
            updateCourtPartColor(part)
        end
    end)
end

local holderFolder = game.Workspace:FindFirstChild("Holder")
if holderFolder then
    local ballsFolder = holderFolder:FindFirstChild("Balls")
    local effectsFolder = holderFolder:FindFirstChild("Effects")
    if ballsFolder then
        ballsFolder.DescendantAdded:Connect(function(obj)
            if colorChangerEnabled then
                updateBallObject(obj)
            end
        end)
    end
    if effectsFolder then
        effectsFolder.DescendantAdded:Connect(function(obj)
            if colorChangerEnabled then
                updateBallObject(obj)
            end
        end)
    end
end

----------------------------------------------------
-- GLOBAL FUNCTIONS FOR GUI INTEGRATION (COLOR CHANGER)
----------------------------------------------------
_G.CourtBallColourChangerOn = function(courtColor, ballColor)
    print("[DEBUG] Applying Court Color:", courtColor, "and Ball Color:", ballColor)
    newCourtColor = BrickColor.new(courtColor)
    newBallColor = BrickColor.new(ballColor)
    colorChangerEnabled = true
    applyColors()
end

_G.CourtBallColourChangerOff = function()
    print("[DEBUG] Disabling Court/Ball Colour Changer")
    colorChangerEnabled = false
end

----------------------------------------------------
-- GUI CODE (Using UIListLayouts for neat stacking)
----------------------------------------------------
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

print("[DEBUG] Creating GUI...")

-- Create main ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MySploitGui"
screenGui.Parent = playerGui

-- Main Frame: 500 x 400, centered
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 500, 0, 400)
mainFrame.Position = UDim2.new(0.5, -250, 0.5, -200)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.BackgroundTransparency = 0.3
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- Top Bar (for dragging)
local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1, 0, 0, 30)
topBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
topBar.BackgroundTransparency = 0.3
topBar.BorderSizePixel = 0
topBar.Parent = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -10, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Made by PoliceCOKE1"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 12
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = topBar

-- Draggable Top Bar Logic
local dragging = false
local dragStart, startPos
topBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
topBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

-- SHIFT+P toggles the GUI visibility
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.P and UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
        mainFrame.Visible = not mainFrame.Visible
    end
end)

-- Sidebar: 160 px wide
local sidebar = Instance.new("ScrollingFrame")
sidebar.Size = UDim2.new(0, 160, 1, -30)
sidebar.Position = UDim2.new(0, 0, 0, 30)
sidebar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
sidebar.BackgroundTransparency = 0.3
sidebar.BorderSizePixel = 0
sidebar.CanvasSize = UDim2.new(0, 0, 0, 55 * 7)
sidebar.ScrollBarThickness = 5
sidebar.Parent = mainFrame

local sidebarLayout = Instance.new("UIListLayout")
sidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder
sidebarLayout.Padding = UDim.new(0, 5)
sidebarLayout.Parent = sidebar

-- Content Frame (remaining area)
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -160, 1, -30)
contentFrame.Position = UDim2.new(0, 160, 0, 30)
contentFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
contentFrame.BackgroundTransparency = 0.3
contentFrame.BorderSizePixel = 0
contentFrame.Parent = mainFrame

local contentLayout = Instance.new("UIListLayout")
contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
contentLayout.Padding = UDim.new(0, 10)
contentLayout.Parent = contentFrame

-- Self-Destruct Button (bottom-right)
local destructBtn = Instance.new("TextButton")
destructBtn.Size = UDim2.new(0, 90, 0, 30)
destructBtn.Position = UDim2.new(1, -100, 1, -40)
destructBtn.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
destructBtn.Text = "Self-Destruct"
destructBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
destructBtn.Font = Enum.Font.SourceSansBold
destructBtn.TextSize = 12
destructBtn.Parent = mainFrame

destructBtn.MouseButton1Click:Connect(function()
    print("[DEBUG] Self-Destruct Initiated...")
    -- Turn off any running scripts
    pcall(function() if _G.BallPredictor1Off then _G.BallPredictor1Off() end end)
    pcall(function() if _G.InfStamOff then _G.InfStamOff() end end)
    pcall(function() if _G.BallPredictor2Off then _G.BallPredictor2Off() end end)
    pcall(function() if _G.TracersOff then _G.TracersOff() end end)
    pcall(function() if _G.MapDeleterOff then _G.MapDeleterOff() end end)
    
    _G.loadedScript1 = nil
    _G.loadedScript2 = nil
    _G.loadedScript3 = nil
    _G.loadedScriptTracers = nil
    _G.script1Enabled = false
    _G.InfStamEnabled = false
    _G.BallPredictor2Enabled = false
    _G.tracersEnabled = false
    _G.mapDeleterEnabled = false

    _G.BallPredictor1Off = nil
    _G.InfStamOff = nil
    _G.BallPredictor2Off = nil
    _G.TracersOff = nil
    _G.MapDeleterOff = nil

    print("[DEBUG] Destroying GUI...")
    screenGui:Destroy()
    print("[DEBUG] Self-Destruct process completed!")
end)

----------------------------------------------------
-- Scripts Table
----------------------------------------------------
local scripts = {
    {
        Name = "Ball Predictor 1",
        Enabled = false,
        GlobalOn = _G.BallPredictor1On,
        GlobalOff = _G.BallPredictor1Off,
    },
    {
        Name = "Inf stam",
        Enabled = false,
        GlobalOn = _G.InfStamOn,
        GlobalOff = _G.InfStamOff,
    },
    {
        Name = "Ball Predictor 2",
        Enabled = false,
        GlobalOn = _G.BallPredictor2On,
        GlobalOff = _G.BallPredictor2Off,
    },
    {
        Name = "Tracers",
        Enabled = false,
        GlobalOn = _G.TracersOn,
        GlobalOff = _G.TracersOff,
    },
    {
        Name = "Map Deleter",
        Enabled = false,
        GlobalOn = _G.MapDeleterOn,
        GlobalOff = _G.MapDeleterOff,
        Warning = "Only turn this on when on a court"
    },
    {
        Name = "Court/Ball Colour Changer",
        Enabled = false,
        GlobalOn = _G.CourtBallColourChangerOn,
        GlobalOff = _G.CourtBallColourChangerOff,
        ColourChanger = true
    }
}

----------------------------------------------------
-- COLOR PICKER FUNCTION
----------------------------------------------------
local function createColorPicker(titleText)
    -- Container frame for the color picker
    local cpFrame = Instance.new("Frame")
    cpFrame.Size = UDim2.new(1, 0, 0, 110)
    cpFrame.BackgroundTransparency = 1

    -- Title label
    local cpTitle = Instance.new("TextLabel")
    cpTitle.Size = UDim2.new(1, 0, 0, 20)
    cpTitle.BackgroundTransparency = 1
    cpTitle.Text = titleText
    cpTitle.TextColor3 = Color3.fromRGB(255,255,255)
    cpTitle.Font = Enum.Font.SourceSansBold
    cpTitle.TextSize = 14
    cpTitle.Parent = cpFrame

    -- Preview box
    local preview = Instance.new("Frame")
    preview.Size = UDim2.new(0, 50, 0, 30)
    preview.Position = UDim2.new(0, 0, 0, 25)
    preview.BackgroundColor3 = Color3.fromRGB(255,0,0)
    preview.BorderSizePixel = 1
    preview.BorderColor3 = Color3.new(0,0,0)
    preview.Parent = cpFrame

    -- Frame to hold the sliders
    local slidersFrame = Instance.new("Frame")
    slidersFrame.Size = UDim2.new(1, -60, 0, 70)
    slidersFrame.Position = UDim2.new(0, 60, 0, 20)
    slidersFrame.BackgroundTransparency = 1
    slidersFrame.Parent = cpFrame

    local slidersLayout = Instance.new("UIListLayout")
    slidersLayout.SortOrder = Enum.SortOrder.LayoutOrder
    slidersLayout.Padding = UDim.new(0, 5)
    slidersLayout.Parent = slidersFrame

    -- Default color = Red (255,0,0)
    local red, green, blue = 255, 0, 0

    local function updatePreview()
        preview.BackgroundColor3 = Color3.fromRGB(red, green, blue)
    end

    local function createSlider(labelText, initialValue, onChange)
        local sliderRow = Instance.new("Frame")
        sliderRow.Size = UDim2.new(1, 0, 0, 20)
        sliderRow.BackgroundTransparency = 1
        sliderRow.Parent = slidersFrame

        local sliderLabel = Instance.new("TextLabel")
        sliderLabel.Size = UDim2.new(0, 40, 1, 0)
        sliderLabel.BackgroundTransparency = 1
        sliderLabel.Text = labelText
        sliderLabel.TextColor3 = Color3.fromRGB(255,255,255)
        sliderLabel.Font = Enum.Font.SourceSansBold
        sliderLabel.TextSize = 14
        sliderLabel.Parent = sliderRow

        local sliderBar = Instance.new("Frame")
        sliderBar.Size = UDim2.new(1, -45, 1, 0)
        sliderBar.Position = UDim2.new(0, 45, 0, 0)
        sliderBar.BackgroundColor3 = Color3.fromRGB(50,50,50)
        sliderBar.BorderSizePixel = 0
        sliderBar.Parent = sliderRow

        local sliderButton = Instance.new("TextButton")
        sliderButton.Size = UDim2.new(0, 10, 1, 0)
        sliderButton.BackgroundColor3 = Color3.fromRGB(200,200,200)
        sliderButton.Text = ""
        sliderButton.Parent = sliderBar

        local value = initialValue
        sliderButton.Position = UDim2.new(0, math.floor((value/255) * (sliderBar.AbsoluteSize.X - 10)), 0, 0)

        local function setValue(newVal)
            value = math.clamp(newVal, 0, 255)
            local px = (value/255) * (sliderBar.AbsoluteSize.X - 10)
            sliderButton.Position = UDim2.new(0, px, 0, 0)
            onChange(value)
        end

        sliderButton.MouseButton1Down:Connect(function()
            local uis = game:GetService("UserInputService")
            local moveConn, releaseConn
            moveConn = uis.InputChanged:Connect(function(i)
                if i.UserInputType == Enum.UserInputType.MouseMovement then
                    local mouseX = i.Position.X - sliderBar.AbsolutePosition.X
                    setValue(math.floor((mouseX/(sliderBar.AbsoluteSize.X - 10)) * 255))
                end
            end)
            releaseConn = uis.InputEnded:Connect(function(u)
                if u.UserInputType == Enum.UserInputType.MouseButton1 then
                    moveConn:Disconnect()
                    releaseConn:Disconnect()
                end
            end)
        end)

        setValue(initialValue)
    end

    -- Create three sliders (R, G, B)
    createSlider("Red:",   255, function(val) red = val;   updatePreview() end)
    createSlider("Green:", 0,   function(val) green = val; updatePreview() end)
    createSlider("Blue:",  0,   function(val) blue = val;  updatePreview() end)

    -- Return the container frame and a function to get the current Color3
    return cpFrame, function()
        return Color3.fromRGB(red, green, blue)
    end
end

----------------------------------------------------
-- Build Sidebar Buttons & Panels
----------------------------------------------------
for i, scriptData in ipairs(scripts) do
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -10, 0, 40)
    btn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    btn.BackgroundTransparency = 0.3
    btn.BorderSizePixel = 0
    btn.Text = scriptData.Name
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 12
    btn.TextWrapped = true
    btn.Parent = sidebar

    btn.MouseButton1Click:Connect(function()
        -- Clear old content
        for _, child in pairs(contentFrame:GetChildren()) do
            child:Destroy()
        end
        
        local scriptPanel = Instance.new("Frame")
        scriptPanel.Size = UDim2.new(1, -10, 0, 0)
        scriptPanel.BackgroundTransparency = 1
        scriptPanel.Parent = contentFrame

        local panelLayout = Instance.new("UIListLayout")
        panelLayout.Padding = UDim.new(0, 5)
        panelLayout.SortOrder = Enum.SortOrder.LayoutOrder
        panelLayout.Parent = scriptPanel

        local panelTitle = Instance.new("TextLabel")
        panelTitle.Size = UDim2.new(1, 0, 0, 30)
        panelTitle.BackgroundTransparency = 1
        panelTitle.Text = scriptData.Name
        panelTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        panelTitle.Font = Enum.Font.SourceSansBold
        panelTitle.TextSize = 16
        panelTitle.Parent = scriptPanel

        if scriptData.Warning then
            local warnLabel = Instance.new("TextLabel")
            warnLabel.Size = UDim2.new(1, 0, 0, 20)
            warnLabel.BackgroundTransparency = 1
            warnLabel.Text = scriptData.Warning
            warnLabel.TextColor3 = Color3.fromRGB(155, 15, 15)
            warnLabel.Font = Enum.Font.SourceSansBold
            warnLabel.TextSize = 14
            warnLabel.Parent = scriptPanel
        end

        if scriptData.ColourChanger then
            -- Create color pickers for Court and Ball
            local colorPickerFrameCourt, getCourtColor = createColorPicker("Court Colour (RGB):")
            colorPickerFrameCourt.Parent = scriptPanel

            local colorPickerFrameBall, getBallColor = createColorPicker("Ball Colour (RGB):")
            colorPickerFrameBall.Parent = scriptPanel

            -- Button row (Apply/Off)
            local buttonRow = Instance.new("Frame")
            buttonRow.Size = UDim2.new(1, 0, 0, 40)
            buttonRow.BackgroundTransparency = 1
            buttonRow.Parent = scriptPanel

            local buttonRowLayout = Instance.new("UIListLayout")
            buttonRowLayout.FillDirection = Enum.FillDirection.Horizontal
            buttonRowLayout.SortOrder = Enum.SortOrder.LayoutOrder
            buttonRowLayout.Padding = UDim.new(0, 10)
            buttonRowLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
            buttonRowLayout.Parent = buttonRow

            local applyBtn = Instance.new("TextButton")
            applyBtn.Size = UDim2.new(0, 60, 0, 30)
            applyBtn.BackgroundColor3 = Color3.fromRGB(25,25,25)
            applyBtn.Text = "Apply"
            applyBtn.TextColor3 = Color3.fromRGB(255,255,255)
            applyBtn.Font = Enum.Font.SourceSansBold
            applyBtn.TextSize = 14
            applyBtn.BorderSizePixel = 1
            applyBtn.BorderColor3 = Color3.new(0,0,0)
            applyBtn.Parent = buttonRow

            local offBtn = Instance.new("TextButton")
            offBtn.Size = UDim2.new(0, 60, 0, 30)
            offBtn.BackgroundColor3 = Color3.fromRGB(25,25,25)
            offBtn.Text = "Off"
            offBtn.TextColor3 = Color3.fromRGB(255,255,255)
            offBtn.Font = Enum.Font.SourceSansBold
            offBtn.TextSize = 14
            offBtn.BorderSizePixel = 1
            offBtn.BorderColor3 = Color3.new(0,0,0)
            offBtn.Parent = buttonRow

            applyBtn.MouseButton1Click:Connect(function()
                local courtC = getCourtColor()
                local ballC = getBallColor()
                print("[DEBUG] Applying Court:", courtC, "Ball:", ballC)
                scriptData.GlobalOn(courtC, ballC)
                scriptData.Enabled = true
            end)

            offBtn.MouseButton1Click:Connect(function()
                if scriptData.Enabled then
                    print("[DEBUG] Disabling Court/Ball Colour Changer")
                    scriptData.GlobalOff()
                    scriptData.Enabled = false
                end
            end)
        else
            -- For non-colour-changer scripts, just On/Off
            local buttonRow = Instance.new("Frame")
            buttonRow.Size = UDim2.new(1, 0, 0, 40)
            buttonRow.BackgroundTransparency = 1
            buttonRow.Parent = scriptPanel

            local buttonRowLayout = Instance.new("UIListLayout")
            buttonRowLayout.FillDirection = Enum.FillDirection.Horizontal
            buttonRowLayout.SortOrder = Enum.SortOrder.LayoutOrder
            buttonRowLayout.Padding = UDim.new(0, 10)
            buttonRowLayout.Parent = buttonRow

            local onBtn = Instance.new("TextButton")
            onBtn.Size = UDim2.new(0, 80, 1, 0)
            onBtn.BackgroundColor3 = Color3.fromRGB(25,25,25)
            onBtn.Text = "On"
            onBtn.TextColor3 = Color3.fromRGB(255,255,255)
            onBtn.Font = Enum.Font.SourceSansBold
            onBtn.TextSize = 14
            onBtn.Parent = buttonRow

            local offBtn = Instance.new("TextButton")
            offBtn.Size = UDim2.new(0, 80, 1, 0)
            offBtn.BackgroundColor3 = Color3.fromRGB(25,25,25)
            offBtn.Text = "Off"
            offBtn.TextColor3 = Color3.fromRGB(255,255,255)
            offBtn.Font = Enum.Font.SourceSansBold
            offBtn.TextSize = 14
            offBtn.Parent = buttonRow

            onBtn.MouseButton1Click:Connect(function()
                if not scriptData.Enabled then
                    print("[DEBUG] Enabling " .. scriptData.Name)
                    scriptData.GlobalOn()
                    scriptData.Enabled = true
                end
            end)

            offBtn.MouseButton1Click:Connect(function()
                if scriptData.Enabled then
                    print("[DEBUG] Disabling " .. scriptData.Name)
                    scriptData.GlobalOff()
                    scriptData.Enabled = false
                end
            end)
        end
    end)
end

print("[DEBUG] GUI script finished loading.")
